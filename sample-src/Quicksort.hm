data List(a) of Nil() | Cons(a, List(a));
data And(a, b) of And(a, b);

partition(k, xs) = case xs
  { Nil() => And(Nil(), Nil())
  | Cons(y, ys) => case partition(k, ys)
    { And(as, bs) => case y <= k
      { True() => And(Cons(y, as), bs)
      | False() => And(as, Cons(y, bs))
      }
    }
  };

append(xs,  ys : List(a)) = case xs : List(a)
  { Nil() => ys
  | Cons(z, zs) => Cons(z, append(zs,ys))
  };

quicksort(xs) = case xs
  { Nil() => Nil()
  | Cons(y, ys) => case partition(y, ys)
    { And(ls, rs) => append(quicksort(ls), Cons(y, quicksort(rs))) }
  };


main() = quicksort([13, 5, 2, 10, 6]);

