data List(a) of Nil() | Cons(a, List(a));

printList(xs) = case xs
  { Nil() => Unit()
  | Cons(y, ys) => out_int(y) >> out_string("\t") >> printList(ys)
  };

setIt(arr,pos) = set(arr, pos, [1,2,3]);


main() = let arr = makeArray(10, Nil()) in
  setIt(arr,3) >> printList(get(arr,3));

main2() = let arr = makeArray(10, 2) in
  out_int(get(arr, 0));

--case get(arr, 5)
--    { True() => out_string("True\n")
--    | False() => out_string("False\n")
--    };
